# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from ckanext.drs.models.base_model import Model

import ckanext.drs.utils as util


class PostAccessURLRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, passports=None):  # noqa: E501
        """PostAccessURLRequest - a model defined in OpenAPI

        :param passports: The passports of this PostAccessURLRequest.  # noqa: E501
        :type passports: List[str]
        """
        self.openapi_types = {
            'passports': List[str]
        }

        self.attribute_map = {
            'passports': 'passports'
        }

        self._passports = passports

    @classmethod
    def from_dict(cls, dikt) -> 'PostAccessURLRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The PostAccessURL_request of this PostAccessURLRequest.  # noqa: E501
        :rtype: PostAccessURLRequest
        """
        return util.deserialize_model(dikt, cls)

    @property
    def passports(self):
        """Gets the passports of this PostAccessURLRequest.

        the encoded JWT GA4GH Passport that contains embedded Visas.  The overall JWT is signed as are the individual Passport Visas.  # noqa: E501

        :return: The passports of this PostAccessURLRequest.
        :rtype: List[str]
        """
        return self._passports

    @passports.setter
    def passports(self, passports):
        """Sets the passports of this PostAccessURLRequest.

        the encoded JWT GA4GH Passport that contains embedded Visas.  The overall JWT is signed as are the individual Passport Visas.  # noqa: E501

        :param passports: The passports of this PostAccessURLRequest.
        :type passports: List[str]
        """

        self._passports = passports
