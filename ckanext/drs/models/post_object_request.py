# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from ckanext.drs.models.base_model import Model

import ckanext.drs.utils as util


class PostObjectRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, expand=None, passports=None):  # noqa: E501
        """PostObjectRequest - a model defined in OpenAPI

        :param expand: The expand of this PostObjectRequest.  # noqa: E501
        :type expand: bool
        :param passports: The passports of this PostObjectRequest.  # noqa: E501
        :type passports: List[str]
        """
        self.openapi_types = {
            'expand': bool,
            'passports': List[str]
        }

        self.attribute_map = {
            'expand': 'expand',
            'passports': 'passports'
        }

        self._expand = expand
        self._passports = passports

    @classmethod
    def from_dict(cls, dikt) -> 'PostObjectRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The PostObject_request of this PostObjectRequest.  # noqa: E501
        :rtype: PostObjectRequest
        """
        return util.deserialize_model(dikt, cls)

    @property
    def expand(self):
        """Gets the expand of this PostObjectRequest.

        If false and the object_id refers to a bundle, then the ContentsObject array contains only those objects directly contained in the bundle. That is, if the bundle contains other bundles, those other bundles are not recursively included in the result. If true and the object_id refers to a bundle, then the entire set of objects in the bundle is expanded. That is, if the bundle contains other bundles, then those other bundles are recursively expanded and included in the result. Recursion continues through the entire sub-tree of the bundle. If the object_id refers to a blob, then the query parameter is ignored.  # noqa: E501

        :return: The expand of this PostObjectRequest.
        :rtype: bool
        """
        return self._expand

    @expand.setter
    def expand(self, expand):
        """Sets the expand of this PostObjectRequest.

        If false and the object_id refers to a bundle, then the ContentsObject array contains only those objects directly contained in the bundle. That is, if the bundle contains other bundles, those other bundles are not recursively included in the result. If true and the object_id refers to a bundle, then the entire set of objects in the bundle is expanded. That is, if the bundle contains other bundles, then those other bundles are recursively expanded and included in the result. Recursion continues through the entire sub-tree of the bundle. If the object_id refers to a blob, then the query parameter is ignored.  # noqa: E501

        :param expand: The expand of this PostObjectRequest.
        :type expand: bool
        """

        self._expand = expand

    @property
    def passports(self):
        """Gets the passports of this PostObjectRequest.

        the encoded JWT GA4GH Passport that contains embedded Visas.  The overall JWT is signed as are the individual Passport Visas.  # noqa: E501

        :return: The passports of this PostObjectRequest.
        :rtype: List[str]
        """
        return self._passports

    @passports.setter
    def passports(self, passports):
        """Sets the passports of this PostObjectRequest.

        the encoded JWT GA4GH Passport that contains embedded Visas.  The overall JWT is signed as are the individual Passport Visas.  # noqa: E501

        :param passports: The passports of this PostObjectRequest.
        :type passports: List[str]
        """

        self._passports = passports
