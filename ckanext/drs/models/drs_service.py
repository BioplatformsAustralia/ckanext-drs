# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from ckanext.drs.models.base_model import Model
from ckanext.drs.models.drs_service_type import DrsServiceType
import ckanext.drs.utils as util


class DrsService(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, type=None):  # noqa: E501
        """DrsService - a model defined in OpenAPI

        :param type: The type of this DrsService.  # noqa: E501
        :type type: DrsServiceType
        """
        self.openapi_types = {
            'type': DrsServiceType
        }

        self.attribute_map = {
            'type': 'type'
        }

        self._type = type

    @classmethod
    def from_dict(cls, dikt) -> 'DrsService':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The DrsService of this DrsService.  # noqa: E501
        :rtype: DrsService
        """
        return util.deserialize_model(dikt, cls)

    @property
    def type(self):
        """Gets the type of this DrsService.


        :return: The type of this DrsService.
        :rtype: DrsServiceType
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this DrsService.


        :param type: The type of this DrsService.
        :type type: DrsServiceType
        """
        if type is None:
            raise ValueError("Invalid value for `type`, must not be `None`")  # noqa: E501

        self._type = type
